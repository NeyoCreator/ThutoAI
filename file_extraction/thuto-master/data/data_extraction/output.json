{"link.html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <script src=\"{{{appclient}}}\"></script>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n    <link href='https://fonts.googleapis.com/css?family=Antic' rel='stylesheet'>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"/path/to/cdn/bootstrap.min.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/toastify-js\"></script>  \n    <script src=\"/path/to/cdn/jquery.slim.min.js\"></script>\n    <script src=\"/path/to/cdn/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.tiny.cloud/1/rjk72u3iaowao00ejujcxl2l02hv16ev2gsgo71ryw6c3o9e/tinymce/6/tinymce.min.js\" referrerpolicy=\"origin\"></script>\n  </head>\n  <body>\n    <div class=\"main\">\n      <link rel=\"stylesheet\" href=\"static\\starter-template.css\">\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\" crossorigin=\"anonymous\"></script>\n\n        \n        <!-- 3.TITLE -->\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Work Item ID</label><br>\n          <input class=\"form-control\"  type=\"text\" id=\"workid\" name=\"workid\">\n        </div>\n      \n    \n    <!-- 5.BUTTON -->\n    <button class=\"button_create\" onclick=\"link_ticket();\" type=\"submit\">Submit</button>\n    <script>src=\"app.js\"</script>\n    <br>\n\n    </div>\n  </body>\n  <script defer src=\"scripts/app.js\"></script>\n  <script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\"></script>\n  <script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\"></script>\n</html>\n", "index.html": "<!DOCTYPE html>\n\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <script src=\"{{{appclient}}}\"></script>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n  <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet'>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/toastify-js\"></script>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script>\n    $(document).ready(function () {\n      $(\".image1\").hover(function () {\n        $(this).attr('src', 'ui_icons/frame_bug_2.svg');\n      }, function () {\n        $(this).attr('src', 'ui_icons/frame_bug.svg');\n      });\n\n      $(\".image2\").hover(function () {\n        $(this).attr('src', 'ui_icons/frame_task_2.svg');\n      }, function () {\n        $(this).attr('src', 'ui_icons/frame_task.svg');\n      });\n\n      $(\".image3\").hover(function () {\n        $(this).attr('src', 'ui_icons/frame_User_Story_2.svg');\n      }, function () {\n        $(this).attr('src', 'ui_icons/frame_User_Story_1.svg');\n      });\n\n      $(\".image4\").hover(function () {\n        $(this).attr('src', 'ui_icons/frame_Issue_2.svg');\n      }, function () {\n        $(this).attr('src', 'ui_icons/frame_Issue_1.svg');\n      });\n\n\n    });  \n  </script>\n\n</head>\n</head>\n\n<body>\n  <div class>\n\n\n    <p class=\"p\"><Strong>Create Devops Items</Strong></p>\n    <p class=\"d\"></p>\n\n    <img class=\"image1\" src=\"ui_icons/frame_bug.svg\" width=\"220px\" height=\"45px\" type=\"button\" onclick=\"show_bug()\">\n    <p></p>\n    <img class=\"image2\" src=\"ui_icons/frame_task.svg\" width=\"220px\" height=\"45px\" type=\"button\"\n      onclick=\"show_work_item()\">\n    <p></p>\n\n    <p></p>\n    <img class=\"image3\" src=\"ui_icons/frame_User_Story_1.svg\" width=\"220px\" height=\"45px\" type=\"button\"\n      onclick=\"show_user_story()\">\n    <p></p>\n\n    \n    <center><button class=\"button_link\" id=\"example\" onclick=\"show_link()\"\n        style=\"position: absolute; left: 0.5%; right: 0.5%; bottom: 42%;\"><strong>Link item </strong></button></center>\n    <p></p>\n    <button class=\"button_create\" id=\"example\" onclick=\"show_toast()\"\n      style=\"position: absolute; left: 0.5%; right: 0.5%; bottom: 32%;\"><strong>Saved Item</strong></button>\n    <p></p>\n    \n\n</body>\n<script defer src=\"scripts/app.js\"></script>\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n<script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\"></script>\n<script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\"></script>\n\n</html>", "workitem.html": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n  <script src=\"{{{appclient}}}\"></script>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n  <link href='https://fonts.googleapis.com/css?family=Antic' rel='stylesheet'>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n  <link rel=\"stylesheet\" href=\"/path/to/cdn/bootstrap.min.css\" />\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/toastify-js\"></script>\n\n  <script src=\"/path/to/cdn/jquery.slim.min.js\"></script>\n  <script src=\"/path/to/cdn/bootstrap.min.js\"></script>\n  <script src=\"https://cdn.tiny.cloud/1/rjk72u3iaowao00ejujcxl2l02hv16ev2gsgo71ryw6c3o9e/tinymce/6/tinymce.min.js\"\n    referrerpolicy=\"origin\"></script>\n\n</head>\n\n<body>\n  <div class=\"main\">\n    <link rel=\"stylesheet\" href=\"static\\starter-template.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\"\n      crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.ckeditor.com/4.11.1/standard/ckeditor.js\"></script>\n    <!-- 1.PROJECT NAME DROPDOWN -->\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Project</label>\n      <select class=\"form-control\" name=\"projectName\" id=\"projectName\"></select>\n      \n    </div>\n\n    <!-- 2.PRIORITY DROPDOWN-->\n    <div class=\"mb-3\">\n      <label class=\"form-label\" for=\"Priority\">Priority</label><br>\n      <select class=\"form-control\" name=\"priority\" id=\"priority\">\n        <option value=1>1</option>\n        <option value=2>2</option>\n        <option value=3>3</option>\n        <option value=4>4</option>\n      </select>\n    </div>\n    <!-- 3.TITLE -->\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Title</label><br>\n      <input class=\"form-control\" type=\"text\" id=\"title\" name=\"title\">\n    </div>\n\n    <!-- 3.TAGS -->\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Tags</label><br>\n      <input class=\"form-control\" type=\"text\" id=\"tags\" name=\"tags\">\n    </div>\n\n    <!-- 4.DESCRIPTION -->\n    <label for=\"form-label\">Description</label><br>\n    <!-- <textarea  class=\"form-control\" rows=\"4\"  cols = \"60\" type=\"text\"  id=\"description\" name=\"description\"></textarea> -->\n    <textarea id=\"description\">\n      </textarea>\n    <p></p>\n\n    <!-- 5.BUTTON -->\n    <button class=\"button_create\" onclick=\"CreateItemNotes();\" type=\"submit\">Submit</button>\n    <!-- FOR TESTING CLIENT MODULE -->\n    <!-- <p id=\"apptext\"></p> -->\n    <script>src = \"app.js\"</script>\n  </div>\n\n\n</body>\n<script defer src=\"scripts/app.js\"></script>\n<script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\"></script>\n<script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\"></script>\n\n</html>", "workitemview.html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <script src=\"{{{appclient}}}\"></script>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n    <link href='https://fonts.googleapis.com/css?family=Antic' rel='stylesheet'>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"/path/to/cdn/bootstrap.min.css\" />\n    <script src=\"/path/to/cdn/jquery.slim.min.js\"></script>\n    <script src=\"/path/to/cdn/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.tiny.cloud/1/rjk72u3iaowao00ejujcxl2l02hv16ev2gsgo71ryw6c3o9e/tinymce/6/tinymce.min.js\" referrerpolicy=\"origin\"></script>  \n  </head>\n  <body>\n    <div class=\"main\">\n      <link rel=\"stylesheet\" href=\"static\\starter-template.css\">\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\" crossorigin=\"anonymous\"></script>\n     \n      <div class=\"mb-3\">\n        <label  id =\"lblworkitem\" class=\"form-label\">Work Item # :</label> \n        </select> \n      </div>\n\n        <!-- 1.PROJECT NAME DROPDOWN -->\n        <div class=\"mb-3\">\n          <label  id =\"lblproject\" class=\"form-label\">Project</label> \n          </select> \n        </div>\n\n        <!-- 3.TITLE -->\n        <div class=\"mb-3\">\n          <label id =\"lbltype\" class=\"form-label\">Type</label><br>\n        </div>\n      \n\n\n    <div class=\"mb-3\">\n      <label id =\"lblstate\" class=\"form-label\" for=\"Priority\">State</label><br>\n    </div>\n      \n    <!-- 3.TAGS -->\n    <div class=\"mb-3\">\n      <label id= \"lblassignee\" class=\"form-label\">Assigne</label><br>\n    </div>\n\n    <!-- 3.TAGS -->\n    <div class=\"mb-3\">\n      <label id= \"lbldescription\"class=\"form-label\">Description</label><br>\n    </div>\n\n      \n    <!-- 5.BUTTON -->\n    </div>\n  </body>\n  <script defer src=\"scripts/app.js\"></script>\n  <script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\"></script>\n  <script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\"></script>\n</html>\n", "style.css": "main {\n  height: 1000px;\n}\n\np {\n  color: #5D5D5D;\n  font-size: medium;\n}\n\nd {\n  height: 10px;\n}\n\n/* button {\n    border: 2px ;\n    border-radius: 1000px;\n    width: 220px;\n    height: 50px;\n    background-color: #FAFAFA;\n    border-style: dotted;\n    border-radius: 5px;\n    border-color: #307A59;\n    padding-left: 2px;\n\n    \n  } */\n\n.btn-group button {\n  background-color: #c05e5e;\n  /* Green background */\n  color: #c05e5e;\n  /* White text */\n  padding: 10px 24px;\n  /* Some padding */\n  cursor: pointer;\n  /* Pointer/hand icon */\n  float: left;\n  /* Float the buttons side by side */\n}\n\n\n.button_border {\n  border: 2px;\n  /* border-radius: 20px; */\n  width: 220px;\n  height: 50px;\n  background-color: #FEF1E1;\n  /* border-radius: 5px; */\n  border-color: #FF9D00;\n  color: #FF9D00;\n  padding-left: 2px;\n  border-radius: 20px;\n}\n\n.button_create {\n  border: 2px;\n  width: 220px;\n  height: 50px;\n  background-color: #307A59;\n  border-radius: 5px;\n  border-color: #307A59;\n  padding-left: 2px;\n  color: #ffffff;\n\n\n}\n\n.button_link {\n  border: 2px;\n  width: 220px;\n  height: 50px;\n  background-color: #307A59;\n  border-radius: 5px;\n  padding-left: 2px;\n  color: #ffffff;\n\n}\n\n\n.button_link {\n\n  border: 2px;\n\n  width: 220px;\n\n  height: 50px;\n\n  background-color: #DAECDD;\n\n  border-radius: 5px;\n\n  padding-left: 2px;\n\n  color: #307A59;\n\n}", "bug.html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <script src=\"{{{appclient}}}\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n    <link href='https://fonts.googleapis.com/css?family=Antic' rel='stylesheet'>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"/path/to/cdn/bootstrap.min.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\"integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/toastify-js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <script src=\"/path/to/cdn/jquery.slim.min.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <script src=\"/path/to/cdn/bootstrap.min.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.tiny.cloud/1/rjk72u3iaowao00ejujcxl2l02hv16ev2gsgo71ryw6c3o9e/tinymce/6/tinymce.min.js\" referrerpolicy=\"origin\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n  </head>\n  <!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <script src=\"{{{appclient}}}\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n    <link href='https://fonts.googleapis.com/css?family=Antic' rel='stylesheet'>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"/path/to/cdn/bootstrap.min.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/toastify-js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <script src=\"/path/to/cdn/jquery.slim.min.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <script src=\"/path/to/cdn/bootstrap.min.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.tiny.cloud/1/rjk72u3iaowao00ejujcxl2l02hv16ev2gsgo71ryw6c3o9e/tinymce/6/tinymce.min.js\" referrerpolicy=\"origin\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n  </head>\n  <body>\n    <div class=\"main\">\n      <link rel=\"stylesheet\" href=\"static\\starter-template.css\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\">\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\" crossorigin=\"anonymous\"></script>\n\n      <!-- Rest of the HTML content -->\n      <!-- ... -->\n    </div>\n    <script src=\"app.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n    <br>\n  </body>\n  <script defer src=\"scripts/app.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n  <script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n  <script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n</html>\n\n\n \n  <script defer src=\"scripts/app.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n  <script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n  <script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\" integrity=\"sha384-ABCDEF1234567890\" crossorigin=\"anonymous\"></script>\n</html>\n", "user_story.html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <script src=\"{{{appclient}}}\"></script>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/style.css\" />\n    <link href='https://fonts.googleapis.com/css?family=Antic' rel='stylesheet'>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"/path/to/cdn/bootstrap.min.css\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\">\n    <script src=\"https://cdn.jsdelivr.net/npm/toastify-js\"></script>\n    <script src=\"/path/to/cdn/jquery.slim.min.js\"></script>\n    <script src=\"/path/to/cdn/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.tiny.cloud/1/rjk72u3iaowao00ejujcxl2l02hv16ev2gsgo71ryw6c3o9e/tinymce/6/tinymce.min.js\" referrerpolicy=\"origin\"></script>\n  </head>\n  <body>\n    <div class=\"main\">\n      <link rel=\"stylesheet\" href=\"static\\starter-template.css\">\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\" crossorigin=\"anonymous\"></script>\n\n        <!-- 1.PROJECT NAME DROPDOWN -->\n        <div class=\"mb-3\">\n          <label for=\"exampleFormControlInput1\" class=\"form-label\">Project</label>\n          <select class=\"form-control\" name=\"projectName\" id=\"projectName\">\n          </select> \n        </div>\n\n        <!-- 3.TITLE -->\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Title</label><br>\n          <input class=\"form-control\"  type=\"text\" id=\"title\" name=\"title\">\n        </div>\n      \n      \n    <!-- 3.TAGS -->\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Tags</label><br>\n      <input class=\"form-control\"  type=\"text\" id=\"tags\" name=\"tags\">\n    </div>\n\n     <!-- 4.System Info -->\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Acceptance Criteria</label><br>\n      <input class=\"form-control\"  type=\"text\" id=\"acceptance_criteria\" name=\"acceptance_criteria\">\n    </div>\n\n\n    <!-- 5.Description -->\n    <label for=\"form-label\">Description</label><br>\n    <!-- <textarea  class=\"form-control\" rows=\"4\"  cols = \"60\" type=\"text\" id=\"description\" name=\"reprosteps\"></textarea> -->\n    <!-- <p id = \"width_text2\"></p> -->\n    <!-- <textarea  class=\"form-control\" rows=\"4\"  cols = \"60\" type=\"text\"  id=\"description\" name=\"description\"></textarea> -->\n    <textarea id=\"description\"></textarea>\n    <p></p> \n      \n    <!-- 5.BUTTON -->\n    <button class=\"button_create\" onclick=\"CreateUserStory();\" type=\"submit\">Submit</button>\n    <script>src=\"app.js\"</script>\n    <br>\n\n    </div>\n  </body>\n  <script defer src=\"scripts/app.js\"></script>\n  <script async type=\"module\" src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.esm.js\"></script>\n  <script async nomodule src=\"https://unpkg.com/@freshworks/crayons@3/dist/crayons/crayons.js\"></script>\n</html>\n", "app.js": "// 0. HEADER\n//0.1 GLOBAL VARIABLES\nvar bool_global = true\nvar time_global = null;\nvar time = 8000\n\n//0.2 FUNCTION CALLS\ninit();\nGetDataWorkItem();\ncheck_linked_data();\n\n\ntimer(bool_global, time_global)\n\n//0.3 INITIALIZE CLIENT\nasync function init() {\n  var client = await app.initialized();\n  client.instance.resize({ height: \"600px\" });\n}\n//0.4 INTERVAL KICK \nfunction timer(bool_global, time_global) {\n  if (bool_global == true) {\n    window.setTimeout(function () {\n      comment_sync();\n    }, time_global);\n  } else {\n    stop()\n  }\n}\n\n//0.5 STOPPING\nfunction stop() {\n  clearTimeout(timer)\n}\n\n//1.1 SHOW WORK ITEM MODAL\nasync function show_work_item() {\n  //GET CLIENT DATA\n  var client\n  client = await app.initialized();\n  client.interface.trigger(\"showModal\", {\n    title: \"Create Work Item\",\n    template: \"workitem.html\"\n  }).then(function (data) {\n    // GetDataBug();\n    console.log(JSON.stringify(data))\n\n  }).catch(function () {\n    show_message(\"danger\", \"Error :\", \"with internal code, contact the technical support team.1\")\n  });\n\n}\n// function sanitizeInput(input) {\n//   // Remove HTML tags using a regular expression\n//   var sanitizedInput = input.replace(/<[^>]*>/g, '');\n\n//   // Escape special characters\n//   // var divElement = document.createElement('div');\n//   // divElement.textContent = sanitizedInput;\n//   // sanitizedInput = divElement.innerHTML;\n\n//   return sanitizedInput;\n// }\n//1.2 SHOW BUG ITEM MODAL\nasync function show_bug() {\n  var client\n  client = await app.initialized();\n\n  client.interface.trigger(\"showModal\", {\n    title: \"Create Bug Item\",\n    template: \"bug.html\"\n  }).then(function (data) {\n    console.log(JSON.stringify(data))\n    //GetDataBug();\n\n  }).catch(function () {\n    show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.x\")\n  });\n\n}\n\n//1.2 SHOW USER STORY\nasync function show_user_story() {\n  var client\n  client = await app.initialized();\n\n  client.interface.trigger(\"showModal\", {\n    title: \"Create User story\",\n    template: \"user_story.html\"\n  }).then(function (data) {\n    console.log(JSON.stringify(data))\n    //GetDataBug();\n\n  }).catch(function () {\n    show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.x\")\n  });\n\n}\n\n//1.3 SHOW LINK\nasync function show_link() {\n  //GET CLIENT DATA\n  var client\n  client = await app.initialized();\n  client.interface.trigger(\"showModal\", {\n    title: \"Link Devops Item\",\n    template: \"link.html\"\n  }).then(function (data) {\n    console.log(JSON.stringify(data))\n\n  }).catch(function () {\n    show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.2\")\n  });\n\n\n}\n\n//2. GET WORK ITEMS DATA\nasync function GetDataWorkItem() {\n  // 2.1 MAKE API CALL\n  var client\n  client = await app.initialized();\n  var bool_GetDataWorkItem = false\n  var time_GetDataWorkItem = 15000\n  timer(bool_GetDataWorkItem, time_GetDataWorkItem)\n  //var subdomain = await client.iparams.get('Azure_Domain');\n  // var url_GetDataWorkItem = subdomain[\"Azure_Domain\"] + `/_apis/projects?api-version=5.1`;\n  // var authOpts_GetDataWorkItem = {\n  //   headers: {\n  //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n  //     'Content-Type': 'application/json'\n  //   }\n  // };\n\n  await client.request.invokeTemplate(\"getDataWorkItem\", { \"context\": {} })\n    .then(\n      async function (response) {\n        response = await response[\"response\"]\n        response = await JSON.parse(response)\n        var ProjectNames = response.value;\n        var ProjectNamesListBug = [];\n        // 2.2 ITERRATE THROUGH RESULT\n        for (var i = 0; i < ProjectNames.length; i++) {\n          ProjectNamesListBug.push(ProjectNames[i].name);\n        }\n\n        //  2.3 POPULATE DROPDOWN\n        var Select = document.getElementById(\"projectName\");\n        for (var i = 0; i < ProjectNamesListBug.length; i++) {\n          var opt = ProjectNamesListBug[i];\n          var el = document.createElement(\"option\");\n          el.textContent = opt;\n          el.value = opt;\n          Select.appendChild(el);\n        }\n        // 2.4 DEFINE DESCRIPTION EDITOR\n        tinymce.init({\n          selector: 'textarea#description'\n        })\n\n        // 2.5 GET TTITLE AND DESCRIPTION\n        client.data.get(\"ticket\").then(\n          function (data) {\n            let title = JSON.stringify(data['ticket']['subject']);\n            let description = JSON.stringify(data['ticket']['description']);\n            let tags = JSON.stringify(data[\"ticket\"][\"tags\"][0]);\n            if (tags == null) {\n              tags = \"NULL\";\n            } else {\n              tags = tags.replace(/['\"]+/g, '');\n            }\n\n            // 2.6 REMOVE QUOTATION MARKS\n            title = title.replace(/['\"]+/g, '');\n\n            //3.4.2 REMOVE HTML TAGS\n            description = description.replace(/\\\\n/g, '');\n\n            // 2.7 REMOVE FIRST CHARACTER\n            description = description.substring(1);\n            description = description.substring(0, description.length - 1);\n            document.getElementById(\"title\").value = title;\n            document.getElementById(\"tags\").value = tags;\n            document.getElementById(\"description\").value = description;\n          },\n          function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.9\")\n          }\n        );\n\n      },\n      function () {\n        // show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.10\")\n      }\n    );\n}\n\n//4. CREATE WORK ITEMS\nasync function CreateItemNotes() {\n  var client;\n  client = await app.initialized();\n\n  // GET TICKET ID\n  var ticket_id_CreateItemNotes = await client.data.get(\"ticket\");\n  ticket_id_CreateItemNotes = ticket_id_CreateItemNotes[\"ticket\"][\"id\"];\n\n  // URL VALUES\n  var Azure_Domain = await client.iparams.get('Azure_Domain');\n  var global_createItemNotes = {};\n\n  // GET VALUES FROM HTML PAGE\n  var project_name = document.getElementById(\"projectName\").value;\n  var title = document.getElementById(\"title\").value;\n  var description = document.getElementById(\"description\").value;\n  var tags = document.getElementById(\"tags\").value;\n  var priority = document.getElementById(\"priority\").value;\n\n  // DEFINE REQUEST BODY\n  var raw_CreateItemNotes = JSON.stringify([\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Title\",\n      \"value\": title\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Description\",\n      \"value\": description\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/Microsoft.VSTS.Common.Priority\",\n      \"from\": null,\n      \"value\": priority\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Tags\",\n      \"value\": tags\n    },\n  ]);\n\n  await client.request.invokeTemplate(\"createItemNotes\", { \"context\": { \"id\": ticket_id_CreateItemNotes } }).then(\n    async function (response_note) {\n      response_note = response_note[\"response\"];\n      response_note = JSON.parse(response_note);\n      console.log(JSON.stringify(response_note));\n    }, function () {\n      show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.14\");\n    });\n\n  client.iparams.get('Azure_Domain')\n    .then(async function (subdomain) {\n      console.log(JSON.stringify(subdomain));\n\n      return await client.request.invokeTemplate(\"postAzureItem\", { \"context\": { \"projectName\": project_name }, body: raw_CreateItemNotes });\n    })\n    .then(async function (response) {\n      response = response[\"response\"];\n      response = JSON.parse(response);\n      var data = response;\n      global_createItemNotes[\"task_id\"] = data[\"id\"];\n      return data[\"id\"];\n    })\n    .then(async function () {\n      // ADD LINK TO WORK ITEM\n      var FreshDomain = await client.iparams.get('Fresh_Domain');\n      var raw_CreateItemNotes1 = JSON.stringify({\n        \"text\": `<a href=\"${FreshDomain[\"Fresh_Domain\"] + \"/a/tickets/\" + ticket_id_CreateItemNotes}\" target=\"_blank\">${\"Freshdesk Ticket :\" + global_createItemNotes[\"task_id\"]}</a>`\n      });\n\n      return await client.request.invokeTemplate(\"postFreshUrl\", { \"context\": { \"projectName\": project_name, \"taskId\": global_createItemNotes[\"task_id\"] }, body: raw_CreateItemNotes1 });\n    })\n    .then(async function (response) {\n      console.log(JSON.stringify(response));\n      let item_link = Azure_Domain[\"Azure_Domain\"] + \"/\" + project_name + \"/_workitems/edit/\" + global_createItemNotes[\"task_id\"];\n      let content = `<a href=\"${item_link}\" target=\"_blank\">Azure Work Item ${global_createItemNotes[\"task_id\"]} URL</a>`;\n      var wrapper = document.createElement('div');\n      wrapper.textContent = content;\n\n      var note_CreateItemNotes1 = \"Work Item \" + global_createItemNotes[\"task_id\"] + \" Created Successfully \" + \"@\" + project_name + \" \\n\" + wrapper.innerHTML;\n      var raw_CreateItemNotes2 = JSON.stringify({\n        \"body\": note_CreateItemNotes1,\n        \"private\": true\n      });\n\n      client.db.set(\"ticket:\" + ticket_id_CreateItemNotes, { \"notes_data\": [] }).then(\n        function (data) {\n          console.log(JSON.stringify(data));\n        },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with database, refresh the page.15\");\n        });\n\n      return await client.request.invokeTemplate(\"postAzureUrl\", { \"context\": { \"ticketId\": ticket_id_CreateItemNotes }, body: raw_CreateItemNotes2 });\n    })\n    .then(async function (response_freshdesk) {\n      console.log(JSON.stringify(response_freshdesk));\n      client.db.update(\"ticket:\" + ticket_id_CreateItemNotes, \"set\", { \"show_alert\": {} });\n      Toastify({\n        text: \"Work Item created successfully\",\n        className: \"success\",\n        duration: 4000,\n        position: \"center\",\n        style: {\n          background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n        }\n      }).showToast();\n    })\n    .catch(function (error) {\n      show_message(\"danger\", \"Error: \", JSON.stringify(error));\n    });\n}\n\n//5. CREATE BUGS\nasync function CreateBug() {\n  var client = await app.initialized();\n  var project_name = sanitizeInput(document.getElementById(\"projectName\").value);\n  var tittle = sanitizeInput(document.getElementById(\"title\").value);\n  var description = sanitizeInput(document.getElementById(\"description\").value);\n  var tags = sanitizeInput(document.getElementById(\"tags\").value);\n  var priority = sanitizeInput(document.getElementById(\"priority\").value);\n  var severity = sanitizeInput(document.getElementById(\"severity\").value);\n  var acceptance_criteria = sanitizeInput(document.getElementById(\"acceptance_criteria\").value);\n  var retro_steps = sanitizeInput(document.getElementById(\"retro_steps\").value);\n  \n  var ticket_id_CreateBug = (await client.data.get(\"ticket\")).ticket.id;\n  var Azure_Domain = (await client.iparams.get('Azure_Domain')).Azure_Domain;\n  \n  var raw_CreateBug = JSON.stringify([\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Title\",\n      \"value\": tittle\n    }, {\n      \"op\": \"add\",\n      \"path\": \"/fields/Microsoft.VSTS.Common.Priority\",\n      \"from\": null,\n      \"value\": priority\n    }, {\n      \"op\": \"add\",\n      \"path\": \"/fields/Microsoft.VSTS.Common.Severity\",\n      \"from\": null,\n      \"value\": severity\n    }, {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Tags\",\n      \"value\": tags\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/Microsoft.VSTS.TCM.ReproSteps\",\n      \"value\": retro_steps\n    }, {\n      \"op\": \"add\",\n      \"path\": \"/fields/Microsoft.VSTS.Common.AcceptanceCriteria\",\n      \"value\": acceptance_criteria\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Description\",\n      \"value\": description\n    },\n  ]);\n\n  await client.request.invokeTemplate(\"CreateBug\", { \"context\": { \"id\": ticket_id_CreateBug } }).then(\n    async function (response_note) {\n      response_note = JSON.parse(response_note.response);\n      console.log(JSON.stringify(response_note));\n    }, function () {\n      show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.16\");\n    }\n  );\n\n  await client.iparams.get('Azure_Domain').then(\n    async function (subdomain) {\n      console.log(JSON.stringify(subdomain));\n\n      return await client.request.invokeTemplate(\"postAzureBug\", { \"context\": { \"projectName\": project_name }, body: raw_CreateBug, });\n    }\n  ).then(async function (response) {\n    response = JSON.parse(response.response);\n    var data = response;\n    global_createBug[\"task_id\"] = data.id;\n    return data.id;\n  }).then(async function () {\n    var FreshDomain = await client.iparams.get('Fresh_Domain');\n    var linkElement = createLinkElement(FreshDomain.Fresh_Domain, ticket_id_CreateBug, global_createBug[\"task_id\"]);\n    var raw_CreateBug1 = JSON.stringify({\n      \"text\": linkElement.outerHTML\n    });\n    return await client.request.invokeTemplate(\"postFreshUrlBug\", { \"context\": { \"projectName\": project_name, \"taskId\": global_createBug[\"task_id\"] }, body: raw_CreateBug1, });\n  }).then(async function (response) {\n    console.log(JSON.stringify(response));\n    var item_link = Azure_Domain + \"/\" + project_name + \"/_workitems/edit/\" + global_createBug[\"task_id\"];\n    var linkElement = createLinkElement(item_link, \"Azure Bug Item \" + global_createBug[\"task_id\"] + \" URL\");\n    var content = document.createElement('div');\n    content.appendChild(linkElement);\n    var note_CreateBug = \"Bug Item \" + global_createBug[\"task_id\"] + \" Created Successfully \" + \"@\" + project_name + \" \\n\";\n    note_CreateBug += content.innerHTML;\n    var raw_CreateBug2 = JSON.stringify({\n      \"body\": note_CreateBug,\n      \"private\": true\n    });\n\n    return client.request.invokeTemplate(\"postAzureUrlBug\", { \"context\": { \"ticketId\": ticket_id_CreateBug }, body: raw_CreateBug2 });\n  }).then(async function (response_freshdesk) {\n    console.log(JSON.stringify(response_freshdesk));\n    Toastify({\n      text: \"Bug Item created Successfully\",\n      className: \"Success\",\n      duration: 4000,\n      position: \"center\",\n      style: {\n        background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n      }\n    }).showToast();\n    window.setTimeout(function () {\n      //timer(true, 1000)   \n    }, 4000);\n\n    return await client.request.invokeTemplate(\"azureLinkTwo\", { \"context\": { \"project_url\": project_url, \"work_link\": global_link_ticket[\"work_link\"] } });\n  }).catch(function (error) {\n    if (error) {\n      show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.18\");\n    }\n  });\n}\n\nfunction createLinkElement(href, text) {\n  var link = document.createElement('a');\n  link.href = href;\n  link.target = \"_blank\";\n  link.textContent = text;\n  return link;\n}\n\n\nfunction createLinkElement(href, text) {\n  var link = document.createElement('a');\n  link.href = href;\n  link.target = \"_blank\";\n  link.textContent = text;\n  return link.outerHTML;\n}\n\n\n\n\n\nasync function CreateUserStory() {\n  var client;\n  client = await app.initialized();\n  //5.1 GET VALUES HTML PAGE\n  var project_name = document.getElementById(\"projectName\").value;\n  var tittle = document.getElementById(\"title\").value;\n  var description = document.getElementById(\"description\").value;\n  var acceptance_criteria = document.getElementById(\"acceptance_criteria\").value;\n\n  //GET TICKET ID\n  var ticket_id_CreateBug = await client.data.get(\"ticket\");\n  ticket_id_CreateBug = ticket_id_CreateBug[\"ticket\"][\"id\"];\n  \n  var Azure_Domain = await client.iparams.get('Azure_Domain');\n  var global_createBug = {};\n\n  // 5.2 DEFINE REQUEST BODY\n  var raw_CreateBug = JSON.stringify([\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Title\",\n      \"value\": tittle\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/System.Description\",\n      \"value\": description\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/fields/Microsoft.VSTS.Common.AcceptanceCriteria\",\n      \"value\": acceptance_criteria\n    }\n  ]);\n\n  await client.request.invokeTemplate(\"CreateUserStory\", { \"context\": { \"id\": ticket_id_CreateBug } })\n    .then(async function (response_note) {\n      response_note = response_note[\"response\"];\n      response_note = JSON.parse(response_note);\n      console.log(JSON.stringify(response_note));\n    }, function () {\n      show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.16\");\n    });\n\n  await client.iparams.get('Azure_Domain')\n    .then(async function (subdomain) {\n      console.log(subdomain);\n      return await client.request.invokeTemplate(\"postAzureUserStory\", { \"context\": { \"projectName\": project_name }, body: raw_CreateBug });\n    })\n    .then(async function (response) {\n      response = response[\"response\"];\n      response = JSON.parse(response);\n      var data = response;\n      global_createBug[\"task_id\"] = data[\"id\"];\n      return data[\"id\"];\n    })\n    .then(async function () {\n      var FreshDomain = await client.iparams.get('Fresh_Domain');\n      var item_link = Azure_Domain[\"Azure_Domain\"] + \"/\" + project_name + \"/_workitems/edit/\" + global_createBug[\"task_id\"];\n      var note_CreateBug = \"User story \" + global_createBug[\"task_id\"] + \" Created Successfully \" + \"@\" + project_name + \" \\n\" + \"Azure User Story URL: \" + item_link;\n      var raw_CreateBug2 = JSON.stringify({\n        \"body\": note_CreateBug,\n        \"private\": true\n      });\n\n      return await client.request.invokeTemplate(\"postFreshUrlUserStory\", { \"context\": { \"projectName\": project_name, \"taskId\": global_createBug[\"task_id\"] }, body: raw_CreateBug2 });\n    })\n    .then(async function (response) {\n      console.log(JSON.stringify(response));\n      Toastify({\n        text: \"User story created Successfully\",\n        className: \"Success\",\n        duration: 4000,\n        position: \"center\",\n        style: {\n          background: \"linear-gradient(to right, #00b09b, #96c93d)\"\n        }\n      }).showToast();\n      window.setTimeout(function () {\n        console.log(\"Showing Message\");\n      }, 4000);\n\n      var url_CreateBug3 = Azure_Domain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workitems?api-version=6.0&ids=\" + global_createBug[\"task_id\"];\n      return client.request.get(url_CreateBug3);\n    })\n    .catch(function (error) {\n      if (error) {\n        show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.18\");\n      }\n    });\n}\n\n\n\n//7.COMMENT SYNC\nasync function comment_sync() {\n  var global_comment_sync = {}\n  var client\n  client = await app.initialized();\n  var bool_comment_sync = true;\n  var time_comment_sync = 8000\n  timer(bool_comment_sync, time_comment_sync)\n\n  client.data.get(\"ticket\")\n    .then(async function (data) {\n      global_comment_sync[\"ticket_id\"] = data[\"ticket\"][\"id\"];\n\n\n      // var subdomain = await client.iparams.get('Fresh_Domain');\n      // var url_comment_sync = subdomain[\"Fresh_Domain\"] + \"/api/v2/tickets/\" + global_comment_sync[\"ticket_id\"] + \"/conversations\"\n      // var requestOptions = {\n      //   headers: { Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`, 'Content-Type': 'application/json', },\n      //   redirect: \"follow\"\n      // }\n      // # REQUEST 1\n      return client.request.invokeTemplate(\"createItemNotes\", { \"context\": { \"id\": global_comment_sync[\"ticket_id\"] } })\n    })\n    .then(async function (response_note) {\n      response_note = response_note[\"response\"]\n      response_note = JSON.parse(response_note)\n      var boolean_status_check = JSON.stringify(response_note)\n      var status_value;\n      var status_value_bool;\n      var information_array = []\n      var notes_key_array = []\n\n      status_value_bool = boolean_status_check.includes(\"DevOps Work Item Status:  \")\n      let notes_objects = {}\n      let notes_key = null\n      getInformation(notes_key, notes_objects, status_value, response_note, information_array, notes_key_array, information_array)\n\n      var project_name = information_array[2]\n      var key_task = information_array[1]\n      var notes_key_array = information_array[3]\n      var notes_object = information_array[0]\n\n\n\n      let notes_values = getRequiredNotes(notes_object, notes_key_array)\n\n      if (project_name == undefined) {\n\n      } else {\n        // var subdomain = await client.iparams.get('Azure_Domain');\n        // var url_comment_sync1 = subdomain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workItems/\" + key_task + \"/comments?api-version=6.0-preview.3\";\n        // var authOpts_comment_sync1 = {\n        //   headers: {\n        //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n        //     'Content-Type': 'application/json-patch+json',\n        //   }\n        // }\n        //  # REQUEST 2\n        await client.request.invokeTemplate(\"WorkItems\", { \"context\": { \"proj_name\": project_name, \"key_task\": key_task } })\n          .then(async function (response) {\n            response = response[\"response\"]\n\n            response = JSON.parse(response)\n\n            response = response[\"comments\"]\n\n            //6.5 OBATIN COMMENTS DATA\n            let comments_object = {}\n            var cleaned_comment_object = getComments(response, comments_object)\n            //CLEAN COMMENT VALUE\n            for (const [key, value] of Object.entries(cleaned_comment_object)) {\n\n              var test_data = value.substring(0, 9)\n\n              if (test_data == \"Freshdesk\") {\n                var length_value = value.length\n                var cleaned_value = value.substring(15, length_value)\n                cleaned_comment_object[key] = cleaned_value\n              }\n            }\n            let comments_values = Object.values(cleaned_comment_object)\n\n            //CLEAN COMMENT VALUES\n            for (let i = 0; i < comments_values.length; i++) {\n              comments_values[i] = comments_values[i].trim()\n            }\n\n            ticketStatusChange(client, key_task, global_comment_sync, status_value_bool)\n            client.data.get(\"ticket\").then(\n              function (data) {\n                console.log(JSON.stringify(data))\n                return client.db.get(\"ticket:\" + global_comment_sync[\"ticket_id\"])\n              })\n              .then(async function (data) {\n                //TICKET EXIST\n                let database_notes = data[\"notes_data\"]\n                if (notes_values.length == comments_values.length) {\n                  for (var i = 0; i < notes_values.length; i++) {\n                    //IF ONE VALUE IS EDITED\n                    if (notes_values[i].trim() != comments_values[i].trim()) {\n                      bool(client, comments_values, notes_values, comments_object, notes_object, i, database_notes, global_comment_sync, project_name, key_task)\n                    }\n                  }\n                }\n                else if (notes_values.length > comments_values.length) {\n                  notesGreater(client, notes_values, comments_values, database_notes, global_comment_sync, key_task, project_name, notes_object)\n                }\n                else if (comments_values.length > notes_values.length) {\n                  commentGreater(client, notes_values, comments_values, database_notes, project_name, key_task, global_comment_sync, comments_object)\n                }\n              },\n                function () {\n                  //ADD TICKET DATA TO DATABASE\n                  return client.db.set(\"ticket:\" + global_comment_sync[\"ticket_id\"], { \"notes_data\": notes_values })\n\n                })\n              .then(function () {\n                console.log(\"Updated Database\")\n\n              },\n                function () {\n                  show_message(\"danger\", \"Error: \", \"with database, refresh the page.22\")\n                });\n          },\n            function () {\n              show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.23\")\n            }\n          );\n      }\n    }).catch(function (error) {\n      show_message(\"danger\", \"error\", JSON.stringify(error))\n    });\n\n}\nasync function ticketStatusChange(client, work_item_id, global_comment_sync, bool_val) {\n\n  // var subdomain = await client.iparams.get('Azure_Domain');\n  // var url_comment_note = subdomain[\"Azure_Domain\"] + \"/_apis/wit/workitems/\" + work_item_id + \"?api-version=6.0\";\n  // var authOpts_comment_note = {\n  //   headers: {\n  //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n  //     'Content-Type': 'application/json-patch+json',\n  //   }\n  // }\n  await client.request.invokeTemplate(\"commentNote\", { \"context\": { \"workItemId\": work_item_id } })\n    .then(async function (response_data) {\n      var response_data = response_data[\"response\"]\n      response_data = JSON.parse(response_data)\n      response_data = response_data[\"fields\"]\n      var status_type = response_data[\"System.State\"]\n      var stat = \"DevOps Work Item Status:  \" + status_type\n      var last_value = await client.db.get(\"ticket:\" + global_comment_sync[\"ticket_id\"])\n      last_value = last_value[\"status_value\"]\n      if (typeof (last_value) == \"undefined\") {\n        last_value = \"holder\"\n      } else {\n      }\n      if (bool_val) {\n\n        if (last_value.includes(stat)) {\n          return\n        } else {\n          ticketStatus(client, stat)\n        }\n      } else if (bool_val == false && last_value == \"holder\") {\n        ticketStatus(client, stat)\n      }\n    }).catch(function (error) {\n      show_message(\"danger\", \"error\", JSON.stringify(error))\n    });\n\n\n}\n//8.SHOW MESSAGE\nasync function show_message(type_response, title_type, plain_text) {\n  var client\n  client = await app.initialized();\n  client.interface.trigger(\"showNotify\", {\n    type: type_response,\n    title: title_type,\n    message: plain_text,\n    template: \"index.html\"\n  }).then(function (data) {\n    console.log(JSON.stringify(data))\n  }).catch(function (error) {\n    show_message(\"danger\", \"error\", JSON.stringify(error) + \"25\")\n  });\n\n}\n\n//9.LINK TICKET\nasync function link_ticket() {\n  var client;\n  let project = [];\n  let details = [];\n  client = await app.initialized();\n\n  // GET TICKET ID\n  var ticket_id_link_ticket = await client.data.get(\"ticket\");\n  ticket_id_link_ticket = ticket_id_link_ticket[\"ticket\"][\"id\"];\n\n  // URL VALUES\n  var FreshDomain = await client.iparams.get('Fresh_Domain');\n  var Azure_Domain = await client.iparams.get('Azure_Domain');\n  var reg = /[$&+,:;=?@#|'<>.^*()%!-]/g;\n  var regEx = /[a-zA-Z]/g;\n  var condition = false;\n  \n  // GLOBAL DICTIONARY\n  var global_link_ticket = {};\n  global_link_ticket[\"work_link\"] = document.getElementById(\"workid\").value;\n  \n  if (global_link_ticket[\"work_link\"].length == 0) {\n    condition = true;\n  } else if (regEx.test(global_link_ticket[\"work_link\"]) == true) {\n    condition = true;\n    document.getElementById(\"workid\");\n  } else if (reg.test(global_link_ticket[\"work_link\"]) == true) {\n    condition = true;\n  } else {\n    condition = false;\n  }\n\n  if (condition == false) {\n    await client.request.invokeTemplate(\"commentNote\", { \"context\": {} })\n      .then(async function (response_project) {\n        response_project = response_project[\"response\"];\n        response_project = JSON.parse(response_project);\n        response_project = response_project[\"value\"];\n        \n        for (var i = 0; i < response_project.length; i++) {\n          let project_name = response_project[i]['name'];\n          project.push(project_name);\n        }\n\n        var project_url = project[0];\n        \n        await client.request.invokeTemplate(\"azureLink\", { \"context\": { \"project_url\": project_url, \"work_link\": global_link_ticket[\"work_link\"] } })\n          .then(async function (data) {\n            console.log(JSON.stringify(data));\n          })\n          .catch(function () {\n            Toastify({\n              text: \"Ticket does not exist\",\n              className: \"error\",\n              duration: 4000,\n              position: \"center\",\n              style: {\n                background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n              }\n            }).showToast();\n\n            window.setTimeout(function () {\n              client.instance.close();\n            }, 4000);\n          });\n\n        return await client.request.invokeTemplate(\"azureLinkTwo\", { \"context\": { \"project_url\": project_url, \"work_link\": global_link_ticket[\"work_link\"] } });\n      })\n      .then(async function (res) {\n        res = res[\"response\"];\n        res = JSON.parse(res);\n        res = res[\"value\"][0][\"fields\"];\n        \n        var type = res[\"System.WorkItemType\"];\n        var proj_name = res[\"System.TeamProject\"];\n        var state = res[\"System.State\"];\n        \n        if (\"System.AssignedTo\" in res) {\n          var assigned = res[\"System.AssignedTo\"]['displayName'];\n        } else {\n          var assigned = null;\n        }\n        \n        var description = res[\"System.Description\"].replace(/<\\/?[^>]+(>|$)/g, \"\");\n        details.push(type, proj_name, state, assigned, description, global_link_ticket[\"work_link\"]);\n        return client.data.get(\"ticket\");\n      })\n      .then(async function (data) {\n        console.log(JSON.stringify(data));\n        var task_id = global_link_ticket[\"work_link\"];\n        global_link_ticket[\"task_id\"] = task_id;\n        var ticket_id = data[\"ticket\"][\"id\"];\n\n        await client.request.invokeTemplate(\"link_task\", { \"context\": { \"ticket_id\": ticket_id, \"task_id\": task_id } })\n          .then(async function (res) {\n            Toastify({\n              text: \"Successfully Linked\",\n              className: \"success\",\n              duration: 4000,\n              position: \"center\",\n              style: {\n                background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n              }\n            }).showToast();\n            window.setTimeout(function () {\n              client.instance.close();\n            }, 4000);\n          })\n          .catch(function (err) {\n            console.error(err);\n            Toastify({\n              text: \"Error occurred\",\n              className: \"error\",\n              duration: 4000,\n              position: \"center\",\n              style: {\n                background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n              }\n            }).showToast();\n            window.setTimeout(function () {\n              client.instance.close();\n            }, 4000);\n          });\n      })\n      .catch(function (err) {\n        console.error(err);\n        Toastify({\n          text: \"Error occurred\",\n          className: \"error\",\n          duration: 4000,\n          position: \"center\",\n          style: {\n            background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n          }\n        }).showToast();\n        window.setTimeout(function () {\n          client.instance.close();\n        }, 4000);\n      });\n  } else {\n    Toastify({\n      text: \"Invalid input\",\n      className: \"error\",\n      duration: 4000,\n      position: \"center\",\n      style: {\n        background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n      }\n    }).showToast();\n    window.setTimeout(function () {\n      client.instance.close();\n    }, 4000);\n  }\n}\n\n\n\n//10.CHECK LINKED DATA\nasync function check_linked_data() {\n  var client;\n  client = await app.initialized();\n\n  client.data.get(\"ticket\").then(\n    function (data) {\n      var ticket_id_check_linked_data = data[\"ticket\"][\"id\"];\n\n      client.db.get(\"ticket:\" + ticket_id_check_linked_data).then(\n        function (data) {\n\n          var is_linked_1 = \"linked_data\" in data\n          console.log(is_linked_1)\n          var linked_data_array = data[\"linked_data\"]\n          console.log(linked_data_array)\n        },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.28\")\n\n        });\n\n    },\n    function () {\n      show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.28\")\n    });\n\n}\n\n//11.GET KEY VAUES\nfunction getKeyByValue(object, value) {\n  return Object.keys(object).find(key => object[key] === value);\n}\n\n\n\n//15.SECDOND DUPLICATE FUNCTION\nfunction hasDuplicates(array) {\n  return (new Set(array)).size !== array.length;\n}\n\nasync function bool(client, comments_values, notes_values, comments_object, notes_object, i, database_notes, global_comment_sync, project_name, key_task) {\n  var value1 = notes_values[i]\n  var value2 = comments_values[i]\n  let bool_note = database_notes.indexOf(value1)\n  let bool_comment = database_notes.indexOf(value2)\n  project_name =project_name.trim()\n  if (bool_note == -1) {\n    //ADD NOTE TO DEVOPS\n\n    var comment_id = getKeyByValue(comments_object, value2)\n   // var subdomain = await client.iparams.get('Azure_Domain');\n   // var url_comment_sync2 = subdomain[\"Azure_Domain\"] + \"/\" + project_name.trim() + \"/_apis/wit/workItems/\" + key_task + \"/comments/\" + comment_id + \"?api-version=6.0-preview.3\";\n    var raw = JSON.stringify({\n      \"text\": `<div><strong>Freshdesk Note:</strong></div><br></br><div>${value1.trim()}</div>`\n    });\n    // var authOpts_comment_sync2 = {\n    //   headers: {\n    //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: raw,\n    // };\n\n    client.request.invokeTemplate(\"editComment\", {\"context\":{\"projectName\":project_name,\"key_task\":key_task,\"comment_id\":comment_id},body:raw, })\n      .then(\n        function () {\n          client.interface.trigger(\"showNotify\", {\n            type: \"success\", title: \"\",\n            message: \"Comment has been updated  on Devops\"\n          }).catch(function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.36\")\n          })\n          client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": notes_values })\n        }),\n      function () {\n        show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.37\")\n      }\n\n  }\n\n  else if (bool_comment == -1) {\n    let v = notes_values[i]\n    client.iparams.get('Fresh_Domain')\n      .then(async function (subdomain) {\n        console.log(subdomain)\n        //ADD COMMENT TO FRESHDESK\n        // THIS IS THE EDITE\n        var added_value1 = \"Devops Comment:\\n\" + value2;\n\n\n        var comment_id = getKeyByValue(notes_object, v)\n       // var url_comment_sync3 = subdomain[\"Fresh_Domain\"] + \"/api/v2/conversations/\" + comment_id;\n        var raw = JSON.stringify({\n          body: added_value1,\n        });\n        // var authOpts_comment_sync3 = {\n        //   headers: {\n        //     Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`,\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: raw,\n        // };\n        return await client.request.invokeTemplate(\"editNote\",{\"context\":{\"comment_id\": comment_id},body:raw, })\n\n      })\n      .then(\n        async function (response) {\n          console.log(JSON.stringify(response))\n          client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": comments_values })\n          client.interface.trigger(\"showNotify\", {\n            type: \"success\", title: \"\",\n            message: \"Devops Comment updated,refresh to sync.\"\n          }).catch(function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.38\")\n          })\n        },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.39\")\n        });\n\n  }\n  else {\n  }\n\n}\n\nasync function notesGreater(client, notes_values, comments_values, database_notes, global_comment_sync, key_task, project_name, notes_object) {\n  var set = new Set(notes_values);\n  var duplicateValues = []\n\n  notes_values.filter(item => {\n    if (set.has(item)) {\n      set.delete(item);\n    }\n    else {\n      duplicateValues.push(item);\n      notes_values[notes_values.indexOf(item)] = item + \" \"\n    }\n  });\n\n  let isduplicate = hasDuplicates(notes_values)\n\n  if (isduplicate) {\n\n  } else {\n\n    let difference = notes_values.filter(x => !comments_values.includes(x));\n    let check_value = Boolean(difference.every(x => database_notes.includes(x)))\n\n\n    //UPDATE VALUES\n    if (check_value) {\n      for (let x = 0; x < difference.length; x++) {\n        //ADD DELETE VALUE ON DEVOPS\n        var deleted_value = difference[x].trim();\n        var comment_id = getKeyByValue(notes_object, deleted_value)\n        //var subdomain = await client.iparams.get('Fresh_Domain');\n        // var url_comment_sync4 = subdomain[\"Fresh_Domain\"] + \"/api/v2/conversations/\" + comment_id;\n        // var requestOptions = {\n        //   headers: { Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`, 'Content-Type': 'application/json', },\n        //   redirect: \"follow\"\n        // }\n        //DELETE VALUE\n        await client.request.invokeTemplate(\"deleteNote\", { \"context\": { comment_id } })\n          .then(\n            function () {\n              client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": notes_values })\n              client.interface.trigger(\"showNotify\", {\n                type: \"success\", title: \"\",\n                message: \"Note been deleted,refresh to sync.\"\n              }).catch(function () {\n                show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.40\")\n              })\n\n            })\n          //UPDATE DATABASE\n          .then(\n            function (data) {\n              console.log(JSON.stringify(data))\n            },\n            function () {\n              show_message(\"danger\", \"Error: \", \"with database, refresh the page.41\")\n\n            });\n      }\n\n    } else {\n\n      for (let x = 0; x < difference.length; x++) {\n        //ADD VALUE TO DEVOPS\n        var added_value = difference[x]\n        //var subdomain = await client.iparams.get('Azure_Domain');\n        //var url_comment_sync5 = subdomain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workitems/\" + key_task + \"/comments?api-version=6.0-preview.3\";\n        var raw = JSON.stringify({\n          \"text\": `<div><strong>Freshdesk Note:</strong></div><br></br><div>${added_value}</div>`\n        });\n        // var authOpts_comment_sync4 = {\n        //   headers: {\n        //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: raw,\n        // };\n\n        await client.request.invokeTemplate(\"postComment\", { \"context\": { \"projectName\": project_name, \"taskId\": key_task }, body: raw, })\n          .then(\n            async function (data) {\n              console.log(JSON.stringify(data))\n\n              return client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": notes_values })\n\n            })\n          .then(\n            //UPDATE DATABASE\n            function (data) {\n              console.log(JSON.stringify(data))\n            },\n            function () {\n              show_message(\"danger\", \"Error: \", \"with database, refresh the page.42\")\n            });\n\n        client.interface.trigger(\"showNotify\", {\n          type: \"success\",\n          message: \"Note added to Devops.\"\n\n        })\n          .then(function (data) {\n            console.log(JSON.stringify(data))\n          })\n          .catch(function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.43\")\n\n          });\n\n\n      }\n    }\n\n  }\n}\n\nasync function commentGreater(client, notes_values, comments_values, database_notes, project_name, key_task, global_comment_sync, comments_object) {\n  var set = new Set(comments_values);\n  var duplicateValues = []\n  var commentGreate_obj = {}\n  comments_values.filter(item => {\n    if (set.has(item)) {\n      set.delete(item);\n    }\n    else {\n      duplicateValues.push(item);\n      //REPLACE DUPLICATE \n      comments_values[comments_values.indexOf(item)] = item + \" \"\n    }\n  });\n\n\n  let isduplicate = hasDuplicates(comments_values)\n  if (isduplicate) {\n   // var subdomain = await client.iparams.get('Azure_Domain');\n    // var url_comment_sync6 = subdomain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workitems/\" + key_task + \"/comments?api-version=6.0-preview.3\";\n    // var authOpts_comment_sync5 = {\n    //   headers: {\n    //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n    //     'Content-Type': 'application/json-patch+json',\n    //   }\n\n    // }\n    await client.request.invokeTemplate(\"getComment\", { \"context\": { \"projectName\": project_name, \"taskId\": key_task } }).then(\n      async function (data) {\n        let response = data[\"response\"]\n        response = JSON.parse(response)\n        let comments = response[\"comments\"]\n        //GET LATEST COMMENT\n        var latest_comment = comments[0]\n        // GET UNIQUE NAME\n        commentGreate_obj[\"input_email\"] = latest_comment[\"createdBy\"][\"uniqueName\"]\n\n        //GET ALL AGENTS\n        // var FreshDomain = await client.iparams.get('Fresh_Domain')\n        // var url_comment_sync7 = FreshDomain[\"Fresh_Domain\"] + \"/api/v2/agents\"\n        // var requestOptions = {\n        //   headers: { Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`, 'Content-Type': 'application/json', },\n        //   redirect: \"follow\",\n        // }\n        return await client.request.invokeTemplate(\"getAgents\", { \"context\": {} })\n      })\n      .then(async function (data) {\n        var email_data = {}\n        let response = data[\"response\"]\n        response = JSON.parse(response)\n        for (var i = 0; i < response.length; i++) {\n          email_data[response[i][\"contact\"][\"email\"]] = response[i][\"id\"]\n        }\n\n        //CHECK IF VALUE EXIST IN EMAIL_DATA\n        // const hasValue = Object.keys(email_data).includes(commentGreate_obj[\"input_email\"]);\n        // const user_email_id = email_data[commentGreate_obj[\"input_email\"]]\n        //CONDITION\n      },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.46\")\n        }\n\n      );\n\n  } else {\n    let difference = comments_values.filter(x => !notes_values.includes(x));\n    let check_value = Boolean(difference.every(x => database_notes.includes(x)))\n    //UPDATE VALUES\n\n\n    if (check_value) {\n\n      if (comments_values.length > 2) {\n\n        CheckValueGreaterThanTwo(client, comments_values, project_name, key_task, global_comment_sync, comments_object, difference)\n\n      }\n      else {\n\n        CheckValueGreaterLessThanTwo(client, comments_values, project_name, key_task, global_comment_sync, comments_object)\n      }\n    }\n    else {\n      //GET COMMENTS FROM DEVOPS\n      //var subdomain = await client.iparams.get('Azure_Domain');\n      // var url_comment_sync12 = subdomain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workitems/\" + key_task + \"/comments?api-version=6.0-preview.3\";\n      // var authOpts_comment_sync10 = {\n      //   headers: {\n      //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n      //     'Content-Type': 'application/json-patch+json',\n      //   }\n      // }\n      await client.request.invokeTemplate(\"getComment\", { \"context\": { \"projectName\": project_name, \"taskId\": key_task } }).then(\n        async function (data) {\n\n          let response = data[\"response\"]\n          response = JSON.parse(response)\n          let comments = response[\"comments\"]\n\n          //GET LATEST COMMENT\n          var latest_comment = comments[0]\n          // GET UNIQUE NAME\n\n          commentGreate_obj[\"input_email2\"] = latest_comment[\"createdBy\"][\"uniqueName\"]\n          //GET ALL AGENTS\n          //var FreshDomain = await client.iparams.get('Fresh_Domain')\n          //var url_comment_sync13 = FreshDomain[\"Fresh_Domain\"] + \"/api/v2/agents\"\n          // var requestOptions = {\n          //   headers: { Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`, 'Content-Type': 'application/json', },\n          //   redirect: \"follow\",\n          // }\n          await client.request.invokeTemplate(\"getAgents\", { \"context\": {} }).then(\n            async function (data) {\n              var email_data = {}\n              let response = data[\"response\"]\n              response = JSON.parse(response)\n              \n              for (var i = 0; i < response.length; i++) {\n                email_data[response[i][\"contact\"][\"email\"]] = response[i][\"id\"]\n              }\n\n              //CHECK IF VALUE EXIST IN EMAIL_DATA\n              const hasValue = Object.keys(email_data).includes(commentGreate_obj[\"input_email2\"]);\n              const user_email_id = email_data[commentGreate_obj[\"input_email2\"]]\n              //CONDITION\n              if (hasValue) {\n                let dif = difference.filter(x => !database_notes.includes(x));\n                UserExists2(client, user_email_id, global_comment_sync, dif, comments_values)\n\n              } else {\n                let dif = difference.filter(x => !database_notes.includes(x));\n                for (let x = 0; x < dif.length; x++) {\n                  //ADD VALUES TO DEVOPS\n                  var added_value = \"Devops Comment:\\n\" + dif[x];\n                  var is_public = dif[x].includes(\"#public\")\n                  var is_public_2 = duplicateValues[x].includes(\"#Public\")\n\n                  if (is_public == true || is_public_2 == true) {\n                    //var subdomain = await client.iparams.get('Fresh_Domain');\n                    //var url_comment_sync15 = subdomain[\"Fresh_Domain\"] + \"/helpdesk/tickets/\" + global_comment_sync[\"ticket_id\"] + \"/conversations/note.json\"\n                    var raw = JSON.stringify({\n                      \"body\": added_value,\n                      \"private\": false\n\n                    }\n                    );\n                  } else {\n                    //var subdomain = await client.iparams.get('Fresh_Domain');\n                    //var url_comment_sync15 = subdomain[\"Fresh_Domain\"] + \"/helpdesk/tickets/\" + global_comment_sync[\"ticket_id\"] + \"/conversations/note.json\"\n\n                    var raw = JSON.stringify({\n                      \"body\": added_value,\n                      \"private\": true\n                    })\n                    \n                  }\n                  // var authOpts_comment_sync12 = {\n                  //   headers: {\n                  //     Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`,\n                  //     'Content-Type': 'application/json',\n                  //   },\n                  //   body: raw,\n                  // };\n\n                  await client.request.invokeTemplate(\"postNote\", { \"context\": { \"ticketId\": global_comment_sync[\"ticket_id\"] }, body: raw, })\n                    .then(function (data) {\n                      console.log(JSON.stringify(data))\n                      return client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": comments_values })\n                    })\n                    .then(function (data) {\n                      console.log(data)\n                    })\n                    .catch(function () {\n                      show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.53\")\n                    });\n                }\n              }\n            })\n            .catch(function () {\n              show_message(\"danger\", \"Error: \", \"with URL request, recheck API credential.54\")\n            });\n        })\n        .catch(function () {\n          console.log(\"Updated Database\")\n        });\n    }\n\n  }\n}\nfunction getComments(response, comments_object) {\n  for (let x = 0; x < response.length; x++) {\n    let body = response[x]['text'];\n    let is_website = body.substring(0, 6);\n    let idx_3 = response[x]['text'].indexOf(\"<a href\");\n    let test = body.substring(5, idx_3);\n    test = test.replace(/&nbsp;/g, \"\");\n    test = test.replace(\"<div>\", \"\");\n    let idx = response[x]['text'].includes(\":\");\n\n    if (is_website == \"<a hre\") {\n      // Handle website case\n      // Add your logic here if needed\n    } else if (idx == false) {\n      let html = response[x]['text'];\n      let div = document.createElement(\"div\");\n      div.innerHTML = html;\n      let text = div.textContent || div.innerText || \"\";\n      comments_object[response[x]['id']] = sanitizeHTML(text);\n    } else {\n      var val = response[x]['text'].indexOf(\":\");\n      var val2 = response[x]['text'].substring(val + 1);\n      val2 = val2.replace(/<\\/?[^>]+(>|$)/g, \"\");\n      var char_greater = val2.indexOf(\">\");\n      val2 = val2.substring(char_greater + 1);\n      var final_string = val2.replace(/&nbsp;/g, \" \");\n      final_string = test + final_string;\n      final_string = final_string.replace(\"2.0,01199fc5-a221-4937-b823-77526be647c5&quot;&gt;\", \"\");\n      comments_object[response[x]['id']] = sanitizeHTML(final_string);\n    }\n  }\n  \n  return comments_object;\n}\n\n// Function to sanitize user-controlled HTML\nfunction sanitizeHTML(html) {\n  const temp = document.createElement(\"div\");\n  temp.textContent = html;\n  return temp.innerHTML;\n}\n\n\n\nasync function ticketStatus(client, stat) {\n  var global_comment_sync = {}\n  //DevOps Work Item Status:  To Do\n  if (!stat.includes(\"New\") == true && !stat.includes(\"To Do\") == true) {\n    client.data.get(\"ticket\")\n      .then(async function (data) {\n        global_comment_sync[\"ticket_id\"] = data[\"ticket\"][\"id\"]\n        //var subdomain_fresh = await client.iparams.get('Fresh_Domain');\n        //var url_Duplicates2 = subdomain_fresh[\"Fresh_Domain\"] + \"/helpdesk/tickets/\" + global_comment_sync[\"ticket_id\"] + \"/conversations/note.json\"\n        var raw = JSON.stringify({\n          \"body\": stat\n        }\n        );\n        // var authOpts_Duplicates2 = {\n        //   headers: {\n        //     Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`,\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: raw,\n        // };\n        await client.request.invokeTemplate(\"postNote\", { \"context\": { \"ticketId\": global_comment_sync[\"ticket_id\"] }, body: raw })\n          .then(\n            function () {\n              client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"status_value\": stat })\n\n              show_message(\"success\", \"Success:\", \"Work Item Status has Changed, Please refresh to sync\")\n            }).catch(function (error) {\n              show_message(\"danger\", \"error\", JSON.stringify(error))\n            })\n      }).catch(function (error) {\n        show_message(\"danger\", \"error\", JSON.stringify(error))\n      })\n  }\n}\n\nfunction getRequiredNotes(notes_object, notes_key_array) {\n  let notes_value = []\n  var key_value = notes_key_array[notes_key_array.length - 1]\n  //iterate through the notes\n  for (var key in notes_object) {\n    //check if key is greate than notes_key\n    if (key > key_value) {\n      var value_array = notes_object[key]\n      value_array = value_array.replace(/\\u00A0/, \" \");\n      value_array = value_array.trim();\n      notes_value.push(value_array);\n    }\n\n  }\n  return notes_value\n}\n\n\n\nasync function CheckValueGreaterThanTwo(client, comments_values, project_name, key_task, global_comment_sync, comments_object, difference) {\n  for (let x = 0; x < difference.length; x++) {\n    var deleted_value = difference[x];\n    //var subdomain = await client.iparams.get('Azure_Domain');\n  }\n  var filtered_comments = {}\n  for (const key in comments_object) {\n    if (comments_object[key] == deleted_value) {\n      filtered_comments[key] = comments_object[key]\n    }\n    else {\n    }\n  }\n\n\n  //ITERATE THROUGH FILTERED ARRAY\n  for (const key in filtered_comments) {\n    //var url_comment_sync10 = subdomain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workItems/\" + key_task + \"/comments/\" + key + \"?api-version=6.0-preview.3\";\n    // var authOpts_comment_sync8 = {\n    //   headers: {\n    //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n    //     'Content-Type': 'application/json-patch+json',\n    //   }\n    // }\n    //CHANGE REQUEST STRUCTURE\n    client.request.invokeTemplate(\"deleteComment\", { \"context\": { \"projectName\": project_name, \"key_task\": key_task, \"key\": key } })\n      .then(\n        async function (data) {\n          console.log(JSON.stringify(data))\n          client.interface.trigger(\"showNotify\", {\n            type: \"success\", title: \"\",\n            message: \"Devops comment has been deleted.\"\n          }).catch(function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.47\")\n          })\n          return client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": comments_values })\n        })\n      .then(\n        function (data) {\n          console.log(JSON.stringify(data))\n        },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with database, refresh the page.48\")\n        });\n\n  }\n}\nasync function CheckValueGreaterLessThanTwo(client, comments_values, project_name, key_task, global_comment_sync, comments_object) {\n  for (let x = 0; x < comments_values.length; x++) {\n    var deleted_value = comments_values[x];\n    // var subdomain = await client.iparams.get('Azure_Domain');\n  }\n  var filtered_comments = {}\n  for (const key in comments_object) {\n    if (comments_object[key] == deleted_value) {\n      filtered_comments[key] = comments_object[key]\n    }\n    else {\n    }\n  }\n\n  //ITERATE THROUGH FILTERED ARRAY\n  for (const key in filtered_comments) {\n    // var url_comment_sync10 = subdomain[\"Azure_Domain\"] + \"/\" + project_name + \"/_apis/wit/workItems/\" + key_task + \"/comments/\" + key + \"?api-version=6.0-preview.3\";\n    // var authOpts_comment_sync8 = {\n    //   headers: {\n    //     Authorization: `Basic <%= encode(iparam.Azure_Api) %>`,\n    //     'Content-Type': 'application/json-patch+json',\n    //   }\n    // }\n\n    //CHANGE REQUEST STRUCTURE\n    client.request.invokeTemplate(\"deleteComment\", { \"context\": { \"projectName\": project_name, \"key_task\": key_task, \"key\": key } })\n      .then(\n        async function (data) {\n          console.log(JSON.stringify(data))\n          client.interface.trigger(\"showNotify\", {\n            type: \"success\", title: \"\",\n            message: \"Devops comment has been deleted.\"\n          }).catch(function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.49\")\n          })\n          return client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": comments_values })\n        })\n      .then(\n        function (data) {\n          console.warn(JSON.stringify(data))\n        },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with database, refresh the page.50\")\n        });\n  }\n}\n\nasync function UserExists2(client, user_email_id, global_comment_sync, dif, comments_values) {\n  for (let x = 0; x < dif.length; x++) {\n    var added_value = \"Devops Comment:\\n\" + dif[x];\n    var is_public = dif[x].includes(\"#public\")\n    var is_public_2 = dif[x].includes(\"#Public\")\n    // alert(JSON.stringify({ is_public_2 }))\n    if (is_public == true || is_public_2 == true) {\n      //var subdomain = await client.iparams.get('Fresh_Domain');\n      //var url_comment_sync14 = subdomain[\"Fresh_Domain\"] + \"/helpdesk/tickets/\" + global_comment_sync[\"ticket_id\"] + \"/conversations/note.json\"\n      var raw = JSON.stringify({\n        \"body\": added_value,\n        \"private\": false,\n        \"user_id\": user_email_id\n      }\n      );\n      // var authOpts_comment_sync11 = {\n      //   headers: {\n      //     Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`,\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: raw,\n      // };\n    } else {\n      //var subdomain = await client.iparams.get('Fresh_Domain');\n      // var url_comment_sync14 = subdomain[\"Fresh_Domain\"] + \"/helpdesk/tickets/\" + global_comment_sync[\"ticket_id\"] + \"/conversations/note.json\"\n      var raw = JSON.stringify({\n          \"body\": added_value,\n          \"private\": true,\n          \"user_id\": user_email_id\n      }\n      );\n      // var authOpts_comment_sync11 = {\n      //   headers: {\n      //     Authorization: `Basic <%= encode(iparam.Fresh_Api) %>`,\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: raw,\n      // };\n    }\n    await client.request.invokeTemplate(\"postNote\", { \"context\": { \"ticketId\": global_comment_sync[\"ticket_id\"] }, body: raw })\n      .then(\n        function (data) {\n          console.log(JSON.stringify(data))\n          client.interface.trigger(\"showNotify\", {\n            type: \"success\", title: \"\",\n            message: \"Devops comment added,refresh to sync.\"\n          }).catch(function () {\n            show_message(\"danger\", \"Error: \", \"with internal code, contact the technical support team.51\")\n          })\n          return client.db.update(\"ticket:\" + global_comment_sync[\"ticket_id\"], \"set\", { \"notes_data\": comments_values })\n        })\n      .then(function (data) {\n        console.log(JSON.stringify(data))\n      },\n        function () {\n          show_message(\"danger\", \"Error: \", \"with database, refresh the page.52\")\n        });\n  }\n}\n\nfunction getInformation(notes_key, notes_objects, status_value, response_note, information_array, notes_key_array, information_array) {\n  for (let x = 0; x < response_note.length; x++) {\n    let from_email = response_note[x]['to_emails']\n    let to_email = response_note[x]['from_email']\n    let body_text = response_note[x]['body_text']\n    var firstLine = body_text.split('\\n')[0];\n    let is_at = firstLine.includes(\"Created Successfully @\")\n    // alert(body_text)\n    let idx = response_note[x]['body_text'].includes(\":\")\n    status_value = response_note[x]['body_text'].includes(\"DevOps Work Item Status:  \")\n\n    if (from_email == null || to_email == null) {\n      if (is_at == true) {\n        // 6.3.1 GET KEY TASK\n        var key_task = firstLine.match(/\\d/g);\n        key_task = key_task.join(\"\")\n        //6.3.2 GET PROJECT NAME\n        var postion_at = body_text.indexOf(\"@\")\n        var project_name = firstLine.substring(postion_at + 1).trim()\n        notes_key = response_note[x]['id']\n        notes_key_array.push(notes_key)\n\n      }\n      else if (idx == false) {\n        notes_objects[response_note[x]['id']] = response_note[x]['body_text']\n      }\n      else if (status_value) {\n      } else {\n        var comment_value = response_note[x]['body_text']\n        var result_value = comment_value.substring(comment_value.indexOf(\":\") + 1, comment_value.length)\n        result_value = result_value.trim()\n        notes_objects[response_note[x]['id']] = result_value\n      }\n    }\n    else {\n    }\n\n  }\n  information_array.push(notes_objects)\n  information_array.push(key_task)\n  information_array.push(project_name)\n  information_array.push(notes_key_array)\n\n  return information_array\n\n\n\n}", "starter-template.css": "/* .heading{\n  font-size: 30px;\n  font-weight: bold;\n  left: 35px;\n}\n\n.orangedot {\n  height: 15px;\n  width: 15px;\n  background-color: #EDAD00;\n  border-radius: 50%;\n  display: inline-block;\n}\n\nbody {\n  font-family: 'Antic';font-weight: bold;\n  background-color: #ffffff;\n  height: 200px;\n\n}\n.starter-template {\n  text-align: left;\n  left: 200px;\n}\n\n.green_button{\n  background-color: #008B8B;\n  border: none; \n  color: #ffffff;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 5px;\n  width: 160px;\n  height: 50x;\n  font-size: 16px;\n  box-shadow: #56585a;\n}\n\n.light_orange_button{\n  background-color: #F4F5F9;\n  border: none; \n  color: #0D111C;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  width: 180px;\n  height: 40x;\n  font-size: 16px;\n  font-weight: bold;\n  \n  border-radius: 45px;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n}\n\n.light_orange_button:hover {\n  background-color: #2EE59D;\n  box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\n  color: #fff;\n  transform: translateY(-7px);\n}\n\n.light_red_button{\n  background-color: #F4F5F9;\n  border: none; \n  color: #0D111C;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  width: 180px;\n  height: 40x;\n  font-size: 16px;\n  font-weight: bold;\n  box-shadow: #EDAD00;\n  padding-left: 2px;\n  \n}\n\n.white_back{\n  background-color: #ffffff;\n  border: none; \n  color: #0a0a0a;\n  box-shadow: #56585a;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  margin: 4px 2px;\n  cursor: pointer;\n  border-radius: 16px;\n  outline-color: #ffffff;\n}\n\n.width_text{\n  height: 10px;\n  border-radius: 2mm;\n  \n}\n\n.width_text2{\n  height: 25px;\n  border-radius: 2mm;\n  \n}\n\n.priority_text{\n  height: 35px;\n}\n\n\n.button {\n  display: flex;\n  height: 50px;\n  padding: 0;\n  background: #009578;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  overflow: hidden;\n  font-family: \"Quicksand\", sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.button:hover {\n  background: #008168;\n}\n\n.button:active {\n  background: #006e58;\n}\n\n.button__text,\n.button__icon {\n  display: inline-flex;\n  align-items: center;\n  padding: 0 24px;\n  color: #fff;\n  height: 100%;\n}\n\n.button__icon {\n  font-size: 1.5em;\n  background: rgba(0, 0, 0, 0.08);\n}\n\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 2px grey;\n  border-radius: 10px;\n}\n */\n"}